#include <stdio.h>
#include <stdlib.h>
#define MAX 100
typedef struct {
    int data[MAX];
    int top;
} Stack;

void initStack(Stack *s) {
    s->top = -1;
}


int isEmpty(Stack *s) {
    return s->top == -1;
}


void push(Stack *s, int value) {
    if (s->top < MAX - 1) {
        s->data[++s->top] = value;
    } else {
        printf("Stack overflow\n");
    }
}
int pop(Stack *s) {
    if (!isEmpty(s)) {
        return s->data[s->top--];
    } else {
        printf("Stack underflow\n");
        return -1;
    }
}

typedef struct {
    Stack stack1;
    Stack stack2;
} Queue;
void initQueue(Queue *q) {
    initStack(&q->stack1);
    initStack(&q->stack2);
}

void enqueue(Queue *q, int value) {
    push(&q->stack1, value);
}
int dequeue(Queue *q) {
    if (isEmpty(&q->stack2)) {
        while (!isEmpty(&q->stack1)) {
            push(&q->stack2, pop(&q->stack1));
        }
    }
    return pop(&q->stack2);
}


int main() {
    Queue q;
    initQueue(&q);

    enqueue(&q, 1);
    enqueue(&q, 2);
    enqueue(&q, 3);

    printf("Dequeued: %d\n", dequeue(&q)); // Output: 1
    printf("Dequeued: %d\n", dequeue(&q)); // Output: 2

    enqueue(&q, 4);
    printf("Dequeued: %d\n", dequeue(&q)); // Output: 3
    printf("Dequeued: %d\n", dequeue(&q)); // Output: 4

    return 0;
}
