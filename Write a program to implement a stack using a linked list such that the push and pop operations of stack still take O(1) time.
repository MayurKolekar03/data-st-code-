#include <stdio.h>
#include <stdlib.h>
Struct Node {
    Int data;
    Struct Node* next;
};

Void push(struct Node** top, int value) {
    
    Struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    If (!newNode) {
        Printf(“Heap overflow\n”);
        Return;
    }
    
    newNode->data = value;
    newNode->next = *top;
    *top = newNode;
    Printf(“%d pushed to stack\n”, value);
}

Int pop(struct Node** top) {
    If (*top == NULL) {
        Printf(“Stack Underflow\n”);
        Return -1;
    }
    Struct Node* temp = *top;
    *top = (*top)->next;
    Int popped = temp->data;
    Free(temp);
    Return popped;
}

Void display(struct Node* top) {
    If (top == NULL) {
        Printf(“Stack is empty\n”);
        Return;
    }
    Struct Node* temp = top;
    While (temp != NULL) {
        Printf(“%d -> “, temp->data);
        Temp = temp->next;
    }
    Printf(“NULL\n”);
}

Int main() {
    Struct Node* top = NULL;
    Push(&top, 10);
    Push(&top, 20);
    Push(&top, 30);
    Display(top);

    Printf(“Popped element: %d\n”, pop(&top));
    Display(top);

    Return 0;
}
